name: Deploy Astro site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  BUILD_PATH: "_src/blog"

jobs:
  check:
    runs-on: ubuntu-latest
    name: Astro Check for Node.js
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 23

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 10
          run_install: false # Disable auto-install

      - name: Install dependencies
        working-directory: ${{ env.BUILD_PATH }}
        run: pnpm install --frozen-lockfile

      - name: Run Astro Check
        working-directory: ${{ env.BUILD_PATH }}
        run: pnpm astro check
  
  build:
    strategy:
      matrix:
        node: [ 22, 23 ]
    runs-on: ubuntu-latest
    name: Astro Build for Node.js
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 23
          
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 10
          run_install: false # Disable auto-install

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Astro
        working-directory: ${{ env.BUILD_PATH }}
        run: |
          pnpm astro build
#            --site "${{ steps.pages.outputs.origin }}" \
#            --base "blog"
        
      - name: Preparar artefato com blog e arquivos da raiz (excluindo _*)
        run: |
          mkdir -p site
          rsync -av --exclude '_*/' ./ site/
          mkdir -p site/blog
          cp -r ${{ env.BUILD_PATH }}/dist/* site/blog/
            
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
